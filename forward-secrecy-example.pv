free c:channel.
free s: bitstring[private].
query attacker(s).

let clientA(pkA:pkey, skA:skey, pkB:spkey ) =
 out(c, pkA);
 in(c, x: bitstring);
 let y = adec(x, skA) in
 let(=pkA,=pkB, k : key) = checksign(y , pkB) in
 out(c, senc(s , k)).

let serverB(pkB: spkey, skB: sskey, pkA: pkey) =
 in(c, pkX: pkey);
 new k : key;
 out (c, aenc(sign((pkX, pkB, k), skB), pkX));
 in (c, x: bitstring);
 letz = sdec(x, k).

process
 new skA : skey;
 new skB : sskey;
 let pkA = pk(skA) in out(c, pkA);
 let pkB = spk(skB) in out( c, pkB);
 (( ! clientA(pkA, skA, pkB)) | ( !serverB(pkB, skB, pkA)) |
 phase 1; out(c,skB))
